import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as mticker 
import seaborn as sns
from io import BytesIO # B√°r PDF export nincs, a diagramokhoz m√©g kellhet BytesIO, ha pl. k√©pk√©nt akarn√°nk menteni (de most nem haszn√°ljuk)
from utils import (
    get_status_box_style,
    get_vrio_table_data,
    highlight_vrio_cells,
    get_factor_explanation_box_style
)

# --- Konfigur√°ci√≥k √©s be√°ll√≠t√°sok ---
st.set_page_config(
    layout="wide",
    page_title="RBV Kkv Indik√°tor", # Program neve a b√∂ng√©sz≈ë f√ºl√∂n
    page_icon="üìä"                 # Log√≥ (favicon) a b√∂ng√©sz≈ë f√ºl√∂n
)

# Roboto bet≈±t√≠pus √©s egy√©b CSS (bele√©rtve a selectbox hover kurzor k√≠s√©rletet)
st.markdown("""
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
        html, body, [class*="st-"], [class*="css-"]  {
            font-family: 'Roboto', sans-serif;
        }
        .stDataFrame th { 
            font-weight: bold;
            background-color: #f0f2f6;
            text-align: left;
        }
        /* Selectbox hover kurzor pr√≥b√°lkoz√°s */
        div[data-baseweb="select"] > div:first-child {
            cursor: default !important; 
        }
        div[data-testid="stSelectbox"] > div > div[aria-expanded] {
            cursor: default !important;
        }
    </style>
""", unsafe_allow_html=True)

st.title("A Kkv-k Nemzetk√∂ziesed√©si Szimul√°tora az RBV Elm√©let Alapj√°n")

# --- T√©nyez≈ëk defin√≠ci√≥i √©s magyar√°zatok ---
factor_definitions = {
    "Innov√°ci√≥s k√©pess√©g": {
        1: "Nagyon alacsony: Nincs kapacit√°s √∫j term√©kek/szolg√°ltat√°sok fejleszt√©s√©re.", 2: "Alacsony: Kisebb, alkalmi fejleszt√©sekre k√©pes.",
        3: "K√∂zepes: Folyamatosan fejleszti term√©keit, de nincs piaci √°tt√∂r√©s.", 4: "Magas: K√©pes innovat√≠v megold√°sokat fejleszteni, ami versenyel≈ënyt ad.",
        5: "Kiemelked≈ë: Piacvezet≈ë innov√°ci√≥k, gyakori √°tt√∂r√©sek."
    },
    "Hum√°nt≈ëke √©s szak√©rtelem": {
        1: "Nagyon alacsony: Hi√°nyzik a nemzetk√∂zi tapasztalat √©s nyelvtud√°s.", 2: "Alacsony: Korl√°tozott sz√°m√∫, nemzetk√∂zi tapasztalattal rendelkez≈ë munkat√°rs.",
        3: "K√∂zepes: K√©pzett munkaer≈ë, alapvet≈ë nyelvtud√°s, de hi√°nyzik a m√©lyebb szak√©rtelem.", 4: "Magas: Magasan k√©pzett, nyelvtud√≥ csapat, nemzetk√∂zi tapasztalattal.",
        5: "Kiemelked≈ë: Kiemelked≈ë szak√©rtelemmel √©s glob√°lis h√°l√≥zattal rendelkez≈ë menedzsment."
    },
    "P√©nz√ºgyi stabilit√°s": {
        1: "Nagyon alacsony: Instabil p√©nz√ºgyi helyzet, forr√°shi√°nyos.", 2: "Alacsony: Nehezen jut finansz√≠roz√°shoz, korl√°tozott befektet√©si k√©pess√©g.",
        3: "K√∂zepes: Stabil p√©nz√ºgyi h√°tt√©r, de nagyobb beruh√°z√°sokhoz k√ºls≈ë forr√°s kell.", 4: "Magas: Kedvez≈ë finansz√≠roz√°si felt√©telek, k√©pes nagyobb k√ºlpiaci beruh√°z√°sokra.",
        5: "Kiemelked≈ë: Kiv√°l√≥ p√©nz√ºgyi helyzet, jelent≈ës saj√°t forr√°sok, k√∂nny≈± forr√°sbevon√°s."
    },
    "Kapcsolati h√°l√≥ √©s partneri egy√ºttm≈±k√∂d√©sek": {
        1: "Nagyon alacsony: Nincs nemzetk√∂zi kapcsolati h√°l√≥.", 2: "Alacsony: Korl√°tozott, alkalmi k√ºlf√∂ldi kapcsolatok.",
        3: "K√∂zepes: Alapvet≈ë nemzetk√∂zi kapcsolatok, de strat√©giai partnerek hi√°nya.", 4: "Magas: Er≈ës nemzetk√∂zi kapcsolati h√°l√≥, stabil partneri egy√ºttm≈±k√∂d√©sek.",
        5: "Kiemelked≈ë: Sz√©lesk√∂r≈± glob√°lis h√°l√≥zat, akt√≠v strat√©giai sz√∂vets√©gek."
    },
    "Technol√≥giai fejletts√©g": {
        1: "Nagyon alacsony: Elavult technol√≥gia, digit√°lis eszk√∂z√∂k hi√°nya.", 2: "Alacsony: Alapvet≈ë digit√°lis eszk√∂z√∂k, de nem integr√°lt rendszerek.",
        3: "K√∂zepes: Modern technol√≥gia, de nem √©lenj√°r√≥, digit√°lis folyamatok r√©szben automatiz√°ltak.", 4: "Magas: Akt√≠van alkalmaz digit√°lis megold√°sokat, e-kereskedelmi csatorn√°k.",
        5: "Kiemelked≈ë: Piacvezet≈ë technol√≥gia, teljes digit√°lis transzform√°ci√≥, AI/automatiz√°l√°s."
    },
    "Korl√°tozott p√©nz√ºgyi forr√°sok (G√°tl√≥)": {
        1: "Nagyon alacsony akad√°ly: Nincs jelent≈ës korl√°t, k√∂nnyen finansz√≠rozhat√≥ a terjeszked√©s.", 2: "Alacsony akad√°ly: Kisebb finansz√≠roz√°si kih√≠v√°sok, de megoldhat√≥k.",
        3: "K√∂zepes akad√°ly: Jelent≈ës, de kezelhet≈ë p√©nz√ºgyi korl√°tok.", 4: "Magas akad√°ly: Neh√©zkes a finansz√≠roz√°s, lass√≠tja a terjeszked√©st.",
        5: "Kiemelked≈ë akad√°ly: Kr√≥nikus forr√°shi√°ny, megg√°tolja a k√ºlpiacra l√©p√©st."
    },
    "Piaci ismeretek hi√°nya (G√°tl√≥)": {
        1: "Nagyon alacsony akad√°ly: M√©lyrehat√≥ piacismeretek a c√©lorsz√°gokr√≥l.", 2: "Alacsony akad√°ly: Alapvet≈ë piacismeret, kisebb hi√°nyoss√°gokkal.",
        3: "K√∂zepes akad√°ly: Hi√°nyos piacismeretek, de piackutat√°ssal p√≥tolhat√≥.", 4: "Magas akad√°ly: Jelent≈ës piaci ismerethi√°ny, nagy kock√°zat.",
        5: "Kiemelked≈ë akad√°ly: Teljes piaci ismerethi√°ny, sikertelen piacra l√©p√©s."
    },
    "Hi√°nyos digit√°lis kompetenci√°k (G√°tl√≥)": {
        1: "Nagyon alacsony akad√°ly: Kiv√°l√≥ digit√°lis kompetenci√°k, online jelenl√©t.", 2: "Alacsony akad√°ly: Alapvet≈ë digit√°lis tud√°s, de van hova fejl≈ëdni.",
        3: "K√∂zepes akad√°ly: R√©szben fejlett digit√°lis kompetenci√°k, de elmarad√°s a versenyt√°rsakt√≥l.", 4: "Magas akad√°ly: Hi√°nyos digit√°lis eszk√∂z√∂k, marketingstrat√©gi√°k.",
        5: "Kiemelked≈ë akad√°ly: Teljes digit√°lis lemarad√°s, online jelenl√©t hi√°nya."
    },
    "Vezet√©si √©s strat√©giai hi√°nyoss√°gok (G√°tl√≥)": {
        1: "Nagyon alacsony akad√°ly: Er≈ës, rugalmas menedzsment, j√≥l meghat√°rozott strat√©gia.", 2: "Alacsony akad√°ly: Kompetens vezet√©s, kisebb strat√©giai finom√≠t√°sra szorul.",
        3: "K√∂zepes akad√°ly: Alapvet≈ë strat√©giai tervez√©s, de hi√°nyzik a nemzetk√∂zi f√≥kusz.", 4: "Magas akad√°ly: Rossz vezet√©si d√∂nt√©sek, rugalmatlan strat√©gia a k√ºlpiacokon.",
        5: "Kiemelked≈ë akad√°ly: Nincs nemzetk√∂zi strat√©gia, rossz kock√°zatkezel√©s."
    }
}

# Session state inicializ√°l√°sa
if 'selected_factors' not in st.session_state:
    st.session_state.selected_factors = {factor_name: 3 for factor_name in factor_definitions.keys()}
if 'current_page' not in st.session_state: 
    st.session_state.current_page = "Kkv Jellemz≈ëk Be√°ll√≠t√°sa"

# Oldals√°v navig√°ci√≥
st.sidebar.header("Navig√°ci√≥")
page_options = ["Kkv Jellemz≈ëk Be√°ll√≠t√°sa", "F≈ëoldal (Kkv Profil)", "Nemzetk√∂ziesed√©si Potenci√°l", "VRIO Elemz√©s", "Besz√°mol√≥", "Gyakorlati Javaslatok"]

try:
    current_page_index = page_options.index(st.session_state.current_page)
except ValueError:
    current_page_index = 0 
    st.session_state.current_page = page_options[0] 

selected_page_from_radio = st.sidebar.radio(
    "V√°lasszon aloldalt:",
    page_options,
    index=current_page_index, 
    key="navigation_radio"
)

if selected_page_from_radio != st.session_state.current_page:
    st.session_state.current_page = selected_page_from_radio
    st.rerun() 

st.sidebar.markdown("---") 
st.sidebar.caption("K√©sz√≠tette: Gy≈ërfi Attila")

page = st.session_state.current_page

# --- Kkv jellemz≈ëk √©rt√©keinek kiolvas√°sa ---
innovacio = st.session_state.selected_factors.get("Innov√°ci√≥s k√©pess√©g", 3)
humantoke = st.session_state.selected_factors.get("Hum√°nt≈ëke √©s szak√©rtelem", 3)
penzugyi_stabilitas = st.session_state.selected_factors.get("P√©nz√ºgyi stabilit√°s", 3)
kapcsolati_halo = st.session_state.selected_factors.get("Kapcsolati h√°l√≥ √©s partneri egy√ºttm≈±k√∂d√©sek", 3)
technologiai_fejlettseg = st.session_state.selected_factors.get("Technol√≥giai fejletts√©g", 3)
korlatozott_penzugyi_forrasok = st.session_state.selected_factors.get("Korl√°tozott p√©nz√ºgyi forr√°sok (G√°tl√≥)", 3)
piaci_ismeretek_hianya = st.session_state.selected_factors.get("Piaci ismeretek hi√°nya (G√°tl√≥)", 3)
hianyos_digitalis_kompetenciak = st.session_state.selected_factors.get("Hi√°nyos digit√°lis kompetenci√°k (G√°tl√≥)", 3)
vezetesi_strategiai_hianyossagok = st.session_state.selected_factors.get("Vezet√©si √©s strat√©giai hi√°nyoss√°gok (G√°tl√≥)", 3)

# --- Sz√°m√≠t√°si logika ---
s_innovacio = (innovacio - 1) / 4; s_humantoke = (humantoke - 1) / 4; s_penzugyi_stabilitas = (penzugyi_stabilitas - 1) / 4
s_kapcsolati_halo = (kapcsolati_halo - 1) / 4; s_technologiai_fejlettseg = (technologiai_fejlettseg - 1) / 4
s_korlatozott_penzugyi_forrasok = 1 - (korlatozott_penzugyi_forrasok - 1) / 4
s_piaci_ismeretek_hianya = 1 - (piaci_ismeretek_hianya - 1) / 4
s_hianyos_digitalis_kompetenciak = 1 - (hianyos_digitalis_kompetenciak - 1) / 4
s_vezetesi_strategiai_hianyossagok = 1 - (vezetesi_strategiai_hianyossagok - 1) / 4
avg_support = (s_innovacio + s_humantoke + s_penzugyi_stabilitas + s_kapcsolati_halo + s_technologiai_fejlettseg) / 5
avg_barrier_negated = (s_korlatozott_penzugyi_forrasok + s_piaci_ismeretek_hianya + s_hianyos_digitalis_kompetenciak + s_vezetesi_strategiai_hianyossagok) / 4
nemzetkoziesedesi_potencial_num = (avg_support * 0.6 + avg_barrier_negated * 0.4) * 100
nemzetkoziesedesi_potencial_num = max(0, min(100, nemzetkoziesedesi_potencial_num))

# --- St√≠lusf√ºggv√©nyek a profil t√°bl√°zathoz (F≈ëoldal) ---
def get_rating_style_main_profile(value):
    color = "black"; background_color = 'transparent'
    if value == 1: background_color = '#f8d7da'; color = '#721c24'
    elif value == 2: background_color = '#f5c6cb'; color = '#721c24'
    elif value == 3: background_color = '#fff3cd'; color = '#856404'
    elif value == 4: background_color = '#d4edda'; color = '#155724'
    elif value == 5: background_color = '#c3e6cb'; color = '#155724'
    return f'background-color: {background_color}; color: {color}; font-weight: bold;'
def get_description_style_main_profile(rating_value):
    if rating_value == 1: color = '#721c24'
    elif rating_value == 2: color = '#721c24'
    elif rating_value == 3: color = '#856404'
    elif rating_value == 4: color = '#155724'
    elif rating_value == 5: color = '#155724'
    else: color = 'black'
    return f'color: {color};'
def style_main_profile_row_cells(row):
    factor_style = 'text-align: left; font-weight: bold; border: 1px solid #ddd; padding: 8px; vertical-align: top;'
    rating_value = row['√ârt√©kel√©s (1-5)']
    rating_cell_color_props = get_rating_style_main_profile(rating_value)
    rating_cell_style = f'{rating_cell_color_props} text-align: center; border: 1px solid #ddd; padding: 8px; vertical-align: top;'
    desc_cell_color_props = get_description_style_main_profile(rating_value)
    desc_cell_style = f'{desc_cell_color_props} text-align: left; border: 1px solid #ddd; padding: 8px; vertical-align: top; word-break: break-word; white-space: normal;'
    return [factor_style, rating_cell_style, desc_cell_style]

# --- Oldalak megjelen√≠t√©se ---
if page == "Kkv Jellemz≈ëk Be√°ll√≠t√°sa":
    st.header("Kkv Jellemz≈ëk Be√°ll√≠t√°sa")
    st.write("Minden t√©nyez≈ët √©rt√©keljen 1-t≈ël 5-ig terjed≈ë sk√°l√°n. Az √©rt√©kel√©s√©hez tartoz√≥ r√©szletes magyar√°zat a kiv√°laszt√°s ut√°n jelenik meg.")
    st.markdown("---")
    cols = st.columns(2); factor_keys = list(factor_definitions.keys()); num_factors = len(factor_keys); mid_point = (num_factors + 1) // 2
    for i, factor_name in enumerate(factor_keys):
        current_col = cols[0] if i < mid_point else cols[1]
        with current_col:
            st.markdown(f"##### {factor_name}")
            current_value_from_session = st.session_state.selected_factors.get(factor_name, 3)
            selected_value = st.selectbox(label=f"√ârt√©kel√©s_{factor_name}", options=[1, 2, 3, 4, 5], index=current_value_from_session - 1, 
                                          key=f"sb_factor_{factor_name.replace(' ', '_').replace('(', '').replace(')', '')}", label_visibility="collapsed")
            st.session_state.selected_factors[factor_name] = selected_value 
            full_description = factor_definitions[factor_name][selected_value]; level_desc, detail_desc = full_description.split(': ', 1)
            is_barrier_factor = "(G√°tl√≥)" in factor_name
            box_style_css = get_factor_explanation_box_style(selected_value, is_barrier_factor) 
            explanation_html = f"<div style='{box_style_css}'><strong>{level_desc} ({selected_value}):</strong> {detail_desc}</div>"
            st.markdown(explanation_html, unsafe_allow_html=True)
    st.markdown("---")
    st.subheader("A be√°ll√≠t√°sok √∂sszefoglal√≥ diagramja:")
    try:
        df_summary_display = pd.DataFrame(st.session_state.selected_factors.items(), columns=['T√©nyez≈ë', '√ârt√©kel√©s'])
        fig_summary_display, ax_summary_display = plt.subplots(figsize=(10, 6)) 
        colors_summary_display = []
        for index, row_disp in df_summary_display.iterrows():
            score_disp = row_disp['√ârt√©kel√©s']; is_barrier_disp = "(G√°tl√≥)" in row_disp['T√©nyez≈ë']
            color_to_append_disp = '#ffc107'
            if is_barrier_disp:
                if score_disp <= 2: color_to_append_disp = '#28a745' 
                elif score_disp >= 4: color_to_append_disp = '#dc3545'
            else:
                if score_disp <= 2: color_to_append_disp = '#dc3545'
                elif score_disp >= 4: color_to_append_disp = '#28a745'
            colors_summary_display.append(color_to_append_disp)
        sns.barplot(x='√ârt√©kel√©s', y='T√©nyez≈ë', data=df_summary_display, palette=colors_summary_display, ax=ax_summary_display, orient='h')
        ax_summary_display.set_xlabel("√ârt√©kel√©s (1-5)"); ax_summary_display.set_ylabel("T√©nyez≈ë"); ax_summary_display.set_title("Kkv Jellemz≈ëk Jelenlegi √ârt√©kel√©sei")
        ax_summary_display.set_xlim(0, 5.5); ax_summary_display.xaxis.set_major_locator(mticker.MultipleLocator(1))
        for i_disp, v_disp in enumerate(df_summary_display['√ârt√©kel√©s']): ax_summary_display.text(v_disp + 0.1, i_disp, str(v_disp), color='black', va='center', fontweight='bold')
        plt.tight_layout(); st.pyplot(fig_summary_display); plt.close(fig_summary_display)
    except Exception as e_diag: st.error(f"Hiba az √∂sszefoglal√≥ diagram megjelen√≠t√©se k√∂zben: {e_diag}")
    st.markdown("---")

elif page == "F≈ëoldal (Kkv Profil)":
    st.header("Kkv Profil √ñsszefoglal√≥")
    st.write("Az al√°bbiakban t√°bl√°zatos form√°ban l√°thatja a jelenleg be√°ll√≠tott kkv jellemz≈ëket.")
    profile_data = []
    for factor_name_key in factor_definitions.keys():
        value = st.session_state.selected_factors[factor_name_key]; description = factor_definitions[factor_name_key][value]
        profile_data.append({"T√©nyez≈ë": factor_name_key, "√ârt√©kel√©s (1-5)": value, "R√∂vid Le√≠r√°s": description.split(': ', 1)[1]})
    df_profile = pd.DataFrame(profile_data)
    styled_profile_styler = df_profile.style.apply(style_main_profile_row_cells, axis=1).hide(axis="index")
    st.dataframe(styled_profile_styler, use_container_width=True, column_config={
        "T√©nyez≈ë": st.column_config.TextColumn("T√©nyez≈ë", width="medium"), "√ârt√©kel√©s (1-5)": st.column_config.TextColumn("√ârt√©kel√©s", width="small"),
        "R√∂vid Le√≠r√°s": st.column_config.TextColumn("Le√≠r√°s", width="large")})
    st.markdown("<br>", unsafe_allow_html=True)
    if st.button("R√©szletes Besz√°mol√≥ Megtekint√©se", key="show_report_btn"):
        st.session_state.current_page = "Besz√°mol√≥" 
        st.rerun() 

elif page == "Nemzetk√∂ziesed√©si Potenci√°l":
    st.header("Nemzetk√∂ziesed√©si Potenci√°l")
    col1, col2 = st.columns([0.6, 0.4]) 
    with col1: st.metric(label="Aktu√°lis Nemzetk√∂ziesed√©si Potenci√°l", value=f"{nemzetkoziesedesi_potencial_num:.1f} %")
    with col2:
        labels_pie = 'El√©rt', 'H√°tral√©v≈ë'; sizes_pie = [nemzetkoziesedesi_potencial_num, 100 - nemzetkoziesedesi_potencial_num]
        explode_pie = (0.05, 0) if 0 < nemzetkoziesedesi_potencial_num < 100 else (0,0)
        color_reached = '#D3D3D3'; 
        if nemzetkoziesedesi_potencial_num < 40: color_reached = '#dc3545' 
        elif nemzetkoziesedesi_potencial_num < 70: color_reached = '#ffc107' 
        else: color_reached = '#28a745' 
        fig_pie, ax_pie = plt.subplots(figsize=(2.5, 2.5)); ax_pie.pie(sizes_pie, explode=explode_pie, labels=None, autopct=None, startangle=90, colors=[color_reached, '#E9E9E9'], wedgeprops = {"edgecolor":"white", 'linewidth': 0.5, 'antialiased': True}); ax_pie.axis('equal')
        centre_circle = plt.Circle((0,0),0.75,fc='white'); fig_pie.gca().add_artist(centre_circle)
        ax_pie.text(0, 0, f"{nemzetkoziesedesi_potencial_num:.0f}%", ha='center', va='center', fontsize=16, fontweight='bold', color=color_reached)
        st.pyplot(fig_pie, use_container_width=False); plt.close(fig_pie)
    st.write("---"); st.subheader("T√©nyez≈ëk Hozz√°j√°rul√°sa (S√∫lyozott Elemz√©s)")
    factors_for_viz = pd.DataFrame({'T√©nyez≈ë': ['Innov√°ci√≥', 'Hum√°nt≈ëke', 'P√©nz√ºgyi stab.', 'Kapcs. h√°l√≥', 'Tech. fejletts√©g', 'P√©nz√ºgyi korl.', 'Piaci ism. hi√°nya', 'Digit. komp. hi√°nya', 'Strat. hi√°ny.'],
        'Hat√°s Pont': [s_innovacio * 10, s_humantoke * 10, s_penzugyi_stabilitas * 10, s_kapcsolati_halo * 10, s_technologiai_fejlettseg * 10, (1 - s_korlatozott_penzugyi_forrasok) * -10, (1 - s_piaci_ismeretek_hianya) * -10, (1 - s_hianyos_digitalis_kompetenciak) * -10, (1 - s_vezetesi_strategiai_hianyossagok) * -10]})
    colors_potential = ['#28a745' if x >= 0 else '#dc3545' for x in factors_for_viz['Hat√°s Pont']] 
    fig_pot, ax_pot = plt.subplots(figsize=(10, 4)) 
    sns.barplot(x='Hat√°s Pont', y='T√©nyez≈ë', data=factors_for_viz, palette=colors_potential, ax=ax_pot)
    ax_pot.set_title('Az egyes t√©nyez≈ëk hat√°sa a nemzetk√∂ziesed√©si potenci√°lra', fontsize=14); ax_pot.set_xlabel('Hat√°s Pontsz√°m', fontsize=10); ax_pot.set_ylabel('T√©nyez≈ë', fontsize=10)
    ax_pot.set_xlim(-10.5, 10.5); ax_pot.tick_params(axis='x', labelsize=8); ax_pot.tick_params(axis='y', labelsize=8); plt.tight_layout(); st.pyplot(fig_pot); plt.close(fig_pot)

elif page == "VRIO Elemz√©s":
    st.header("VRIO-modell elemz√©s"); st.info("A VRIO-modell (Valuable, Rare, Inimitable, Organized) alapj√°n √©rt√©kelj√ºk az er≈ëforr√°sait. A '‚úì' jel√∂li, ha az er≈ëforr√°s megfelel a krit√©riumnak, '‚úó' pedig ha nem.")
    vrio_data_bool = get_vrio_table_data(innovacio, humantoke, penzugyi_stabilitas, kapcsolati_halo, technologiai_fejlettseg)
    df_vrio = pd.DataFrame(vrio_data_bool, columns=['Er≈ëforr√°s', '√ârt√©kes', 'Ritka', 'Ut√°nozhatatlan', 'Szervezett'])
    styled_df_vrio_styler = df_vrio.style.applymap(highlight_vrio_cells, subset=['√ârt√©kes', 'Ritka', 'Ut√°nozhatatlan', 'Szervezett']).set_properties(**{'text-align': 'center', 'font-weight': 'bold'}, subset=['√ârt√©kes', 'Ritka', 'Ut√°nozhatatlan', 'Szervezett']).set_properties(**{'text-align': 'left', 'font-weight': 'bold'}, subset=['Er≈ëforr√°s']).hide(axis="index")
    formatter_vrio = {col: (lambda x: "‚úì" if x else "‚úó") for col in ['√ârt√©kes', 'Ritka', 'Ut√°nozhatatlan', 'Szervezett']}
    st.dataframe(styled_df_vrio_styler.format(formatter_vrio), use_container_width=True, column_config={"Er≈ëforr√°s": st.column_config.TextColumn(width="large"), "√ârt√©kes": st.column_config.TextColumn(width="small"), "Ritka": st.column_config.TextColumn(width="small"), "Ut√°nozhatatlan": st.column_config.TextColumn(width="small"), "Szervezett": st.column_config.TextColumn(width="small")})
    st.markdown("<br>", unsafe_allow_html=True)

elif page == "Besz√°mol√≥":
    st.header("R√©szletes Eredm√©ny Besz√°mol√≥"); st.markdown("---")
    st.write("Ez az oldal √∂sszefoglalja √©s √©rtelmezi a nemzetk√∂ziesed√©si szimul√°torban be√°ll√≠tott √©rt√©kek √©s a sz√°m√≠tott potenci√°l alapj√°n levonhat√≥ f≈ëbb k√∂vetkeztet√©seket.")
    
    st.subheader("1. Nemzetk√∂ziesed√©si Potenci√°l √ârt√©kel√©se")
    col_report1, col_report2 = st.columns([0.7, 0.3])
    with col_report1:
        st.metric(label="Kisz√°m√≠tott Nemzetk√∂ziesed√©si Potenci√°l", value=f"{nemzetkoziesedesi_potencial_num:.1f} %")
        potencial_text = ""
        if nemzetkoziesedesi_potencial_num < 40: potencial_text = "Ez **alacsony** nemzetk√∂ziesed√©si potenci√°lt jelez. V√°llalkoz√°s√°nak jelenleg jelent≈ës bels≈ë fejleszt√©sekre √©s a g√°tl√≥ t√©nyez≈ëk cs√∂kkent√©s√©re van sz√ºks√©ge a sikeres nemzetk√∂zi piacra l√©p√©shez. Az alacsony pontsz√°m arra utal, hogy t√∂bb kulcsfontoss√°g√∫ ter√ºleten is elmarad√°s tapasztalhat√≥, ami kock√°zatoss√° teszi a k√ºlpiaci nyit√°st megfelel≈ë felk√©sz√ºl√©s n√©lk√ºl."
        elif nemzetkoziesedesi_potencial_num < 70: potencial_text = "Ez **k√∂zepes** nemzetk√∂ziesed√©si potenci√°lt mutat. V√°llalkoz√°sa rendelkezik bizonyos er≈ëss√©gekkel, amelyekre √©p√≠thet, de vannak m√©g lek√ºzdend≈ë akad√°lyok √©s fejleszthet≈ë ter√ºletek. A nemzetk√∂zi sikeress√©g √©rdek√©ben √©rdemes a gyenges√©gekre koncentr√°lni √©s a megl√©v≈ë el≈ëny√∂ket tudatosan kiakn√°zni, miel≈ëtt nagyobb l√©pt√©k≈± nemzetk√∂zi terjeszked√©sbe kezdene."
        else: potencial_text = "Ez **magas** nemzetk√∂ziesed√©si potenci√°lt jelez. V√°llalkoz√°sa er≈ës alapokkal rendelkezik a nemzetk√∂zi terjeszked√©shez, √©s j√≥ es√©lyekkel indulhat a k√ºlpiacokon. A magas pontsz√°m azt sugallja, hogy a bels≈ë er≈ëforr√°sok √©s a k√ºls≈ë k√∂rnyezet kev√©sb√© g√°tl√≥ t√©nyez≈ëi egy√ºttesen kedvez≈ë helyzetet teremtenek a sikeres nemzetk√∂zi jelenl√©thez."
        st.markdown(potencial_text)
    with col_report2: 
        labels_pie_rep = 'El√©rt', 'H√°tral√©v≈ë'; sizes_pie_rep = [nemzetkoziesedesi_potencial_num, 100 - nemzetkoziesedesi_potencial_num]
        explode_pie_rep = (0.05, 0) if 0 < nemzetkoziesedesi_potencial_num < 100 else (0,0)
        color_reached_rep = '#D3D3D3'; 
        if nemzetkoziesedesi_potencial_num < 40: color_reached_rep = '#dc3545'
        elif nemzetkoziesedesi_potencial_num < 70: color_reached_rep = '#ffc107'
        else: color_reached_rep = '#28a745'
        fig_pie_rep, ax_pie_rep = plt.subplots(figsize=(2.5, 2.5)); ax_pie_rep.pie(sizes_pie_rep, explode=explode_pie_rep, labels=None, autopct=None, startangle=90, colors=[color_reached_rep, '#E9E9E9'], wedgeprops = {"edgecolor":"white", 'linewidth': 0.5, 'antialiased': True}); ax_pie_rep.axis('equal')
        centre_circle_rep = plt.Circle((0,0),0.75,fc='white'); fig_pie_rep.gca().add_artist(centre_circle_rep)
        ax_pie_rep.text(0, 0, f"{nemzetkoziesedesi_potencial_num:.0f}%", ha='center', va='center', fontsize=16, fontweight='bold', color=color_reached_rep)
        st.pyplot(fig_pie_rep, use_container_width=False); plt.close(fig_pie_rep)
    st.markdown("---")

    st.subheader("2. F≈ëbb T√©nyez≈ëk R√©szletes Elemz√©se")
    t√°mogat√≥_factors = {k:v for k,v in st.session_state.selected_factors.items() if "(G√°tl√≥)" not in k}
    g√°tl√≥_factors = {k:v for k,v in st.session_state.selected_factors.items() if "(G√°tl√≥)" in k}
    
    er≈ës_t√°mogat√≥k = sorted([ (k,v) for k,v in t√°mogat√≥_factors.items() if v >= 4], key=lambda item: item[1], reverse=True)
    if er≈ës_t√°mogat√≥k:
        st.markdown("**Er≈ëss√©gek ‚Äì Kiemelked≈ë er≈ëforr√°sok, amelyekre √©p√≠thet a nemzetk√∂zi piacokon:**")
        text_block_strong = "Az elemz√©s alapj√°n v√°llalkoz√°sa t√∂bb ter√ºleten is er≈ës poz√≠ci√≥kkal rendelkezik, amelyek megalapozhatj√°k a nemzetk√∂zi sikert. "
        for factor, value in er≈ës_t√°mogat√≥k[:2]: 
            factor_desc_detail = factor_definitions[factor][value].split(': ',1)[1]
            text_block_strong += f"K√ºl√∂n√∂sen figyelemre m√©lt√≥ a(z) **{factor.lower()}** ({value}/5), amely azt jelenti, hogy v√°llalata {factor_desc_detail.lower()} Ez komoly versenyel≈ënyt biztos√≠that a k√ºlpiacokon, √©s √©rdemes erre a k√©pess√©gre tudatosan √©p√≠teni a nemzetk√∂zi strat√©gi√°t. "
        st.markdown(text_block_strong)
    else:
        st.markdown("**Er≈ëss√©gek ‚Äì Kiemelked≈ë er≈ëforr√°sok:** Jelenleg nincsenek 4-es vagy 5-√∂s √©rt√©kel√©s≈± t√°mogat√≥ er≈ëforr√°sai. Ez azt jelzi, hogy b√°r lehetnek stabilan m≈±k√∂d≈ë ter√ºletek, a kiemelked≈ë, nehezen m√°solhat√≥ versenyel≈ëny√∂k m√©g fejleszt√©sre szorulnak. √ârdemes lenne azonos√≠tani √©s fejleszteni azokat a bels≈ë k√©pess√©geket, amelyekre a nemzetk√∂zi terjeszked√©s √©p√ºlhet, vagy a megl√©v≈ë k√∂zepes er≈ëforr√°sokat magasabb szintre emelni.")
    st.markdown("<br>", unsafe_allow_html=True)

    gyenge_t√°mogat√≥k = sorted([ (k,v) for k,v in t√°mogat√≥_factors.items() if v <= 2], key=lambda item: item[1])
    if gyenge_t√°mogat√≥k:
        st.markdown("**Fejlesztend≈ë ter√ºletek ‚Äì Er≈ëforr√°sok, amelyekre √©rdemes f√≥kusz√°lni:**")
        text_block_weak = "Az √©rt√©kel√©s r√°vil√°g√≠tott n√©h√°ny olyan bels≈ë er≈ëforr√°sra, amelyek tov√°bbi fejleszt√©st ig√©nyelnek a sikeres nemzetk√∂ziesed√©s √©rdek√©ben, mivel jelenlegi szintj√ºk korl√°tozhatja a k√ºlpiaci √©rv√©nyes√ºl√©st. "
        for factor, value in gyenge_t√°mogat√≥k[:2]:
            factor_desc_detail = factor_definitions[factor][value].split(': ',1)[1]
            text_block_weak += f"A(z) **{factor.lower()}** ({value}/5) ter√ºlet√©n jelent≈ës el≈ërel√©p√©sre van sz√ºks√©g, mivel jelenleg v√°llalata {factor_desc_detail.lower()} Ennek meger≈ës√≠t√©se kulcsfontoss√°g√∫ lehet a k√ºlpiaci versenyk√©pess√©g jav√≠t√°s√°hoz √©s a kock√°zatok cs√∂kkent√©s√©hez. "
        st.markdown(text_block_weak)
    else:
        st.markdown("**Fejlesztend≈ë ter√ºletek ‚Äì Er≈ëforr√°sok:** √ögy t≈±nik, nincsenek kifejezetten alacsony (1-es vagy 2-es) pontsz√°m√∫ t√°mogat√≥ er≈ëforr√°sai, ami pozit√≠v. Azonban a k√∂zepes er≈ëforr√°sok tov√°bbi er≈ës√≠t√©se √©s a potenci√°lis gyenges√©gek proakt√≠v kezel√©se tov√°bbra is fontos lehet a hossz√∫ t√°v√∫ siker √©rdek√©ben.")
    st.markdown("<br>", unsafe_allow_html=True)

    alacsony_g√°tl√≥k = sorted([ (k,v) for k,v in g√°tl√≥_factors.items() if v <= 2], key=lambda item: item[1])
    if alacsony_g√°tl√≥k:
        st.markdown("**Kedvez≈ë k√ºls≈ë t√©nyez≈ëk ‚Äì Alacsony szint≈± akad√°lyok:**")
        text_block_low_barrier = "Bizonyos g√°tl√≥ t√©nyez≈ëk eset√©ben v√°llalkoz√°sa kedvez≈ë helyzetben van, ami megk√∂nny√≠theti a nemzetk√∂zi piacra l√©p√©st √©s cs√∂kkentheti a kapcsol√≥d√≥ kock√°zatokat. "
        for factor, value in alacsony_g√°tl√≥k[:2]:
            factor_desc_detail = factor_definitions[factor][value].split(': ',1)[1]
            clean_factor_name = factor.replace(' (G√°tl√≥)','').lower()
            text_block_low_barrier += f"P√©ld√°ul a(z) **{clean_factor_name}** ({value}/5) ter√ºlet√©n alacsony akad√°lyokkal kell szemben√©znie, hiszen {factor_desc_detail.lower()} Ezt √©rdemes kihaszn√°lni a strat√©giaalkot√°s sor√°n, √©s f√≥kusz√°lni azokra a piacokra, ahol ezek a kedvez≈ë felt√©telek √©rv√©nyes√ºlnek. "
        st.markdown(text_block_low_barrier)
    else:
        st.markdown("**Kedvez≈ë k√ºls≈ë t√©nyez≈ëk ‚Äì Alacsony szint≈± akad√°lyok:** Az elemz√©s nem t√°rt fel kiemelked≈ëen alacsony (1-es vagy 2-es) pontsz√°m√∫ g√°tl√≥ t√©nyez≈ëket. Ez azt jelenti, hogy t√∂bb ter√ºleten is lehetnek kezelend≈ë kih√≠v√°sok, amelyekre fel kell k√©sz√ºlni, √©s proakt√≠van kell kezelni a potenci√°lis neh√©zs√©geket.")
    st.markdown("<br>", unsafe_allow_html=True)

    magas_g√°tl√≥k = sorted([ (k,v) for k,v in g√°tl√≥_factors.items() if v >= 4], key=lambda item: item[1], reverse=True)
    if magas_g√°tl√≥k:
        st.markdown("**Kritikus kih√≠v√°sok ‚Äì Jelent≈ës akad√°lyok, amelyekre kiemelt figyelmet kell ford√≠tani:**")
        text_block_high_barrier = "Vannak olyan t√©nyez≈ëk, amelyek jelenleg komoly akad√°lyt g√∂rd√≠thetnek a nemzetk√∂zi terjeszked√©s √∫tj√°ba, √©s amelyek kezel√©se elengedhetetlen a sikerhez. Ezek figyelmen k√≠v√ºl hagy√°sa jelent≈ës kock√°zatokat hordozhat. "
        for factor, value in magas_g√°tl√≥k[:2]:
            factor_desc_detail = factor_definitions[factor][value].split(': ',1)[1]
            clean_factor_name = factor.replace(' (G√°tl√≥)','').lower()
            text_block_high_barrier += f"K√ºl√∂n√∂sen nagy kih√≠v√°st jelenthet a(z) **{clean_factor_name}** ({value}/5), mivel {factor_desc_detail.lower()} Ezen akad√°lyok cs√∂kkent√©se vagy kik√ºsz√∂b√∂l√©se, illetve a r√°juk adott strat√©giai v√°lasz priorit√°st kell, hogy √©lvezzen a nemzetk√∂ziesed√©si tervek kidolgoz√°sa sor√°n. "
        st.markdown(text_block_high_barrier)
    else:
        st.markdown("**Kritikus kih√≠v√°sok ‚Äì Jelent≈ës akad√°lyok:** Az √©rt√©kel√©s alapj√°n √∫gy t≈±nik, nincsenek kiemelked≈ëen magas (4-es vagy 5-√∂s) pontsz√°m√∫ g√°tl√≥ t√©nyez≈ëi, ami biztat√≥. Ez cs√∂kkenti a k√∂zvetlen, s√∫lyos kock√°zatokat, de a k√∂zepes szint≈± akad√°lyokra is figyelmet kell ford√≠tani √©s strat√©gi√°t kell kidolgozni azok hat√©kony kezel√©s√©re.")
    st.markdown("---")

    st.subheader("3. VRIO Elemz√©s Kulcsfontoss√°g√∫ Meg√°llap√≠t√°sai")
    vrio_data = get_vrio_table_data(innovacio, humantoke, penzugyi_stabilitas, kapcsolati_halo, technologiai_fejlettseg)
    vrio_paragraphs = []
    for row in vrio_data:
        eroforras, v, r, i, o = row
        sentence_parts = []
        if v: sentence_parts.append("√©rt√©kesnek min≈ës√ºl, mivel hozz√°j√°rul a vev≈ëi √©rt√©kteremt√©shez vagy a k√∂lts√©ghat√©konys√°ghoz")
        else: sentence_parts.append("jelenlegi form√°j√°ban nem felt√©tlen√ºl tekinthet≈ë k√∂zvetlen√ºl √©rt√©kesnek a nemzetk√∂zi versenyben, vagy fejleszt√©sre szorul ezen a t√©ren")
        if r: sentence_parts.append("ritka a piacon, azaz kev√©s versenyt√°rs rendelkezik hasonl√≥val")
        else: sentence_parts.append("nem tekinthet≈ë ritk√°nak, √≠gy m√°sok is hozz√°f√©rhetnek vagy rendelkezhetnek vele")
        if i: sentence_parts.append("nehezen m√°solhat√≥ vagy helyettes√≠thet≈ë a versenyt√°rsak √°ltal, ami v√©delmet ny√∫jthat")
        else: sentence_parts.append("viszonylag k√∂nnyen ut√°nozhat√≥ vagy helyettes√≠thet≈ë lehet, ami cs√∂kkenti a bel≈ële sz√°rmaz√≥ el≈ënyt")
        if o: sentence_parts.append("√©s v√°llalata szervezeti fel√©p√≠t√©se, folyamatai √©s kult√∫r√°ja t√°mogatj√°k annak hat√©kony kihaszn√°l√°s√°t √©s a benne rejl≈ë √©rt√©k maximaliz√°l√°s√°t")
        else: sentence_parts.append("azonban a szervezeti felk√©sz√ºlts√©g, a bels≈ë folyamatok vagy a v√°llalati kult√∫ra hi√°nyoss√°gai korl√°tozhatj√°k a benne rejl≈ë potenci√°l teljes k√∂r≈± kiakn√°z√°s√°t, m√©g ha az er≈ëforr√°s √∂nmag√°ban √©rt√©kes is lenne")

        vrio_desc = f"A(z) **{eroforras.lower()}** az elemz√©s alapj√°n {', '.join(sentence_parts)}."

        if v and r and i and o: vrio_desc += " Mindezek alapj√°n ez az er≈ëforr√°s **tart√≥s versenyel≈ënyt** biztos√≠that √ñnnek a nemzetk√∂zi piacokon, amelyre hossz√∫ t√°von is √©p√≠thet strat√©gi√°t, mivel nehezen t√°madhat√≥ √©s fenntarthat√≥."
        elif v and r and o: vrio_desc += " Ez√°ltal **ideiglenes versenyel≈ënyt** jelenthet, am√≠g a versenyt√°rsak nem k√©pesek hasonl√≥ er≈ëforr√°st vagy k√©pess√©get ki√©p√≠teni. Fontos a folyamatos fejleszt√©s √©s az el≈ëny meg≈ërz√©s√©re ir√°nyul√≥ t√∂rekv√©s."
        elif v and o: vrio_desc += " √çgy **versenyparit√°st** √©rhet el a piacon, de √∂nmag√°ban ez nem garant√°l kiemelked≈ë, megk√ºl√∂nb√∂ztetett poz√≠ci√≥t. M√°s t√©nyez≈ëkkel kombin√°lva lehet er≈ësebb."
        else: vrio_desc += " Ez a jelenlegi form√°j√°ban √©s kiakn√°zotts√°g√°ban **versenyh√°tr√°nyt** is jelenthet, vagy kev√©sb√© b√≠r relevanci√°val a nemzetk√∂zi siker szempontj√°b√≥l. √ârdemes megfontolni ezen er≈ëforr√°s fejleszt√©s√©t vagy alternat√≠v√°k keres√©s√©t."
        vrio_paragraphs.append(vrio_desc)
    for par in vrio_paragraphs:
        st.markdown(par)
        st.markdown(" ") 
    st.markdown("---")
    
    st.subheader("4. √ñsszegz√©s √©s Javasolt K√∂vetkez≈ë L√©p√©sek")
    st.markdown("Ez a szimul√°ci√≥ egy pillanatk√©pet adott v√°llalkoz√°sa nemzetk√∂ziesed√©si felk√©sz√ºlts√©g√©r≈ël. A kapott eredm√©nyek alapj√°n azonos√≠thatta er≈ëss√©geit √©s a fejlesztend≈ë ter√ºleteket, valamint a potenci√°lis akad√°lyokat.")
    st.markdown("A konkr√©t, szem√©lyre szabott teend≈ëk√©rt √©s strat√©giai javaslatok√©rt k√©rj√ºk, **tekintse meg a 'Gyakorlati Javaslatok' oldalt**, amely a potenci√°l pontsz√°ma alapj√°n ad ir√°nymutat√°st a k√∂vetkez≈ë l√©p√©sekhez.")
    st.markdown("Ne feledje, a nemzetk√∂ziesed√©s egy folyamatos tanul√°si √©s alkalmazkod√°si folyamat. A piaci k√∂rnyezet √©s a bels≈ë k√©pess√©gek v√°ltozhatnak, ez√©rt rendszeres √∂n√©rt√©kel√©s √©s strat√©giai finomhangol√°s javasolt. Sok sikert k√≠v√°nunk!")

elif page == "Gyakorlati Javaslatok":
    st.header("Gyakorlati Javaslatok a Nemzetk√∂ziesed√©shez")
    box_style = get_status_box_style(nemzetkoziesedesi_potencial_num) 
    message_javaslat = ""; javaslat_reszlet = ""
    javaslat_alacsony_text = "* **P√©nz√ºgyi alapok meger≈ës√≠t√©se:** Vizsg√°lja meg a kedvezm√©nyes hitelkonstrukci√≥kat, p√°ly√°zati lehet≈ës√©geket √©s kock√°zati t≈ëkebefektet√©si opci√≥kat a nemzetk√∂ziesed√©s finansz√≠roz√°s√°hoz. K√©sz√≠tsen r√©szletes p√©nz√ºgyi tervet a v√°rhat√≥ k√∂lts√©gekr≈ël √©s megt√©r√ºl√©sr≈ël.\n* **Piaci ismeretek b≈ëv√≠t√©se:** Kezdjen r√©szletes piackutat√°st a c√©lpiacokr√≥l, bele√©rtve a versenyt√°rsak, a fogyaszt√≥i ig√©nyek √©s a jogi-szab√°lyoz√°si k√∂rnyezet elemz√©s√©t. Fontolja meg helyi tan√°csad√≥k vagy piackutat√≥ c√©gek bevon√°s√°t.\n* **Digit√°lis felk√©sz√ºlts√©g:** Fektessen be modern e-kereskedelmi platformokba, fejlessze online marketing strat√©gi√°j√°t (SEO, k√∂z√∂ss√©gi m√©dia, tartalommarketing), √©s biztos√≠tsa a megfelel≈ë digit√°lis infrastrukt√∫r√°t a nemzetk√∂zi vev≈ëk kiszolg√°l√°s√°hoz."
    javaslat_kozepes_text = "* **Innov√°ci√≥ √∂szt√∂nz√©se:** Folyamatosan fejlessze term√©keit √©s szolg√°ltat√°sait a nemzetk√∂zi piaci ig√©nyeknek megfelel≈ëen. Keresse a K+F egy√ºttm≈±k√∂d√©seket, vegyen r√©szt ipar√°gi innov√°ci√≥s programokban, √©s figyelje a glob√°lis trendeket.\n* **Hum√°nt≈ëke fejleszt√©se:** Biztos√≠tson k√©pz√©seket √©s nyelvi kurzusokat munkat√°rsainak a nemzetk√∂zi √ºzleti kommunik√°ci√≥ √©s kultur√°lis √©rz√©kenys√©g jav√≠t√°sa √©rdek√©ben. Fontolja meg nemzetk√∂zi tapasztalattal rendelkez≈ë szakemberek alkalmaz√°s√°t vagy menedzsmenti tud√°simportot.\n* **Kapcsolati h√°l√≥ b≈ëv√≠t√©se:** Vegyen r√©szt akt√≠van nemzetk√∂zi √ºzleti f√≥rumokon, szakmai ki√°ll√≠t√°sokon √©s v√°s√°rokon. Csatlakozzon nemzetk√∂zi szakmai szervezetekhez √©s kereskedelmi kamar√°khoz a potenci√°lis partnerek √©s √ºgyfelek felkutat√°sa √©rdek√©ben."
    javaslat_magas_text = "* **Strat√©giai partners√©gek:** Keressen hossz√∫ t√°v√∫, k√∂lcs√∂n√∂sen el≈ëny√∂s strat√©giai sz√∂vets√©geket √©s partners√©geket a c√©lpiacokon (pl. disztrib√∫torok, helyi gy√°rt√≥k, k√∂z√∂s v√°llalatok). Ezek seg√≠thetnek a piaci behatol√°sban √©s a kock√°zatok megoszt√°s√°ban.\n* **Folyamatos innov√°ci√≥ √©s adapt√°ci√≥:** Maradjon a trendek √©l√©n, alkalmazza a leg√∫jabb technol√≥gi√°kat, √©s gy≈±jts√∂n akt√≠van vev≈ëi visszajelz√©seket a term√©kek √©s szolg√°ltat√°sok folyamatos t√∂k√©letes√≠t√©se √©rdek√©ben. Legyen rugalmas √©s k√©pes gyorsan alkalmazkodni a v√°ltoz√≥ piaci ig√©nyekhez.\n* **Kock√°zatkezel√©s √©s fenntarthat√≥s√°g:** Fejlessze ki √©s alkalmazza a nemzetk√∂zi kereskedelemmel j√°r√≥ kock√°zatok (pl. deviza√°rfolyam-ingadoz√°s, politikai instabilit√°s, kintl√©v≈ës√©gek) kezel√©s√©re vonatkoz√≥ strat√©gi√°kat. Fontolja meg exportbiztos√≠t√°sok √©s egy√©b kock√°zatcs√∂kkent≈ë eszk√∂z√∂k haszn√°lat√°t. √úgyeljen a fenntarthat√≥ √ºzleti gyakorlatokra is."
    
    if nemzetkoziesedesi_potencial_num < 40:
        message_javaslat = "Alacsony nemzetk√∂ziesed√©si potenci√°l. Er≈ës f√≥kuszra van sz√ºks√©g a bels≈ë er≈ëforr√°sok fejleszt√©s√©re!"
        st.markdown(f'<div style="{box_style}">{message_javaslat}</div>', unsafe_allow_html=True); st.markdown(javaslat_alacsony_text)
    elif 40 <= nemzetkoziesedesi_potencial_num < 70:
        message_javaslat = "K√∂zepes nemzetk√∂ziesed√©si potenci√°l. Vannak er≈ëss√©gei, de a g√°tl√≥ t√©nyez≈ëk lek√ºzd√©se kritikus!"
        st.markdown(f'<div style="{box_style}">{message_javaslat}</div>', unsafe_allow_html=True); st.markdown(javaslat_kozepes_text)
    else: 
        message_javaslat = "Magas nemzetk√∂ziesed√©si potenci√°l! F√≥kusz√°ljon a fenntarthat√≥ n√∂veked√©sre √©s a piacvezet≈ë poz√≠ci√≥ megszerz√©s√©re."
        st.markdown(f'<div style="{box_style}">{message_javaslat}</div>', unsafe_allow_html=True); st.markdown(javaslat_magas_text)

